git init     #把当前目录变成git可以管理的仓库， git只能在可以管理的仓库下进行管理
##git只能跟踪文本文件改动，所以尽量使用vscode的UTF-8文件，别用windows记事本
 
git add xxx.txt    #把文件xxx添加到仓库(待提交队列)

git commit -m "xxxx"   #把文件提交到仓库，-m 后面的是本次提交的说明

git status #查看仓库当前状态(可显示文件是否被修改，是否准备提交等)

git diff xxx.txt #查看文件的修改内容

git log #显示提交日志

git log --pretty=oneline #显示提交日志(简化成一行)

##第一行commit:xxx和开头是commit id(指向文件版本的id)

git reset --hard HEAD^ #把当前版本回退到上个版本

# 'HEAD' 表示当前版本 'HEAD^' 表示上个版本 'HEAD^^'表示上上个版本. 以此类推
# 'HEAD~100' 表示前100个版本

git reset --hard 'commit id' #回退到commit id 版本，commit id 是上面log所显示的id，前几位就可，git会自动搜索

# git 内部个有指向当前HEAD的指针， 所以退版本等操作相当于改变HEAD指针位置

git reflog  #查看历史命令(可以确认版本回退后，回退前的版本ID)






